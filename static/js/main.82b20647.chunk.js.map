{"version":3,"sources":["colorbox.js","navbar.js","palette.js","App.js","reportWebVitals.js","index.js"],"names":["Colorbox","props","state","copied","changestate","bind","this","setState","setTimeout","name","background","text","onCopy","style","className","Component","Navbar","format","open","handlechange","closesnackbar","e","target","value","level","changelevel","href","defaultValue","step","min","max","onAfterChange","Select","onChange","MenuItem","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","id","toUpperCase","ContentProps","onClose","action","IconButton","onClick","color","aria-label","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"iUA2CeA,E,kDAtCX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CAACC,QAAQ,GACtB,EAAKC,YAAa,EAAKA,YAAYC,KAAjB,gBAHJ,E,+CAKlB,WAAc,IAAD,OACTC,KAAKC,SAAS,CAACJ,QAAO,IAAO,WACzBK,YAAW,kBAAI,EAAKD,SAAS,CAACJ,QAAO,MAAS,W,oBAGtD,WACI,MAA0BG,KAAKL,MAAxBQ,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,WACLP,EAAUG,KAAKJ,MAAfC,OACP,OACI,cAAC,kBAAD,CAAiBQ,KAAMD,EAAYE,OAAQN,KAAKF,YAAhD,SACA,sBAAKS,MAAO,CAACH,WAAYA,GAAaI,UAAW,WAAjD,UACI,qBAAKD,MAAO,CAACH,cAAaI,UAAS,uBAAkBX,GAAU,UAC/D,sBAAKW,UAAS,uBAAkBX,GAAU,QAA1C,UACI,oDACA,uCAAUO,QAEd,sBAAKI,UAAU,iBAAf,UACI,qBAAKA,UAAU,cAAf,SACI,+BACKL,MAGL,wBAAQK,UAAU,cAAlB,qBAIZ,sBAAMA,UAAU,WAAhB,2B,GAhCWC,a,2EC2DRC,E,kDAlDX,WAAYf,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAM,CAACe,OAAO,MAAOC,MAAK,GAC/B,EAAKC,aAAc,EAAKA,aAAad,KAAlB,gBACnB,EAAKe,cAAc,EAAKA,cAAcf,KAAnB,gBAJL,E,gDAMlB,SAAagB,GACTf,KAAKC,SAAS,CAACU,OAAOI,EAAEC,OAAOC,MAAOL,MAAK,IAC3CZ,KAAKL,MAAMkB,aAAaE,EAAEC,OAAOC,S,2BAErC,WACIjB,KAAKC,SAAS,CAACW,MAAK,M,oBAE1B,WACM,MAA4BZ,KAAKL,MAA1BuB,EAAP,EAAOA,MAAMC,EAAb,EAAaA,YACNR,EAAUX,KAAKJ,MAAfe,OACT,OACI,yBAAQH,UAAU,SAAlB,UACI,qBAAKA,UAAU,OAAf,SACE,mBAAGY,KAAK,IAAR,4BAGF,sBAAKZ,UAAU,mBAAf,UACE,2CAAcU,KACV,qBAAKV,UAAU,SAAf,SACA,cAAC,IAAD,CAAQa,aAAcH,EAAOI,KAAM,IAAKC,IAAK,IAAKC,IAAK,IAAKC,cAAeN,SAGjF,qBAAKX,UAAU,mBAAf,SACI,eAACkB,EAAA,EAAD,CAAQT,MAAON,EAAQgB,SAAU3B,KAAKa,aAAtC,UACI,cAACe,EAAA,EAAD,CAAUX,MAAM,MAAhB,wBACA,cAACW,EAAA,EAAD,CAAUX,MAAM,MAAhB,8BACA,cAACW,EAAA,EAAD,CAAUX,MAAM,OAAhB,sCAGT,cAACY,EAAA,EAAD,CAAUC,aAAc,CAACC,SAAS,SAAUC,WAAW,QAASpB,KAAMZ,KAAKJ,MAAMgB,KACjFqB,iBAAkB,IAAMC,QAAS,uBAAMC,GAAG,aAAT,+BAAyCxB,EAAOyB,iBACjFC,aAAc,CACV,mBAAoB,cAExBC,QAAStC,KAAKc,cACdyB,OAAQ,CAAC,cAACC,EAAA,EAAD,CAAYC,QAASzC,KAAKc,cAAe4B,MAAM,UACxDC,aAAW,QADF,SAEL,cAAC,IAAD,KAFkE,mB,GA1C9DlC,a,MCLCA,Y,8BCYPmC,MAbf,WACE,OACE,eAAC,IAAD,WACA,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAI,8DAClC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,eAAeC,OAAQ,kBAAI,mDCElCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASV,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFW,SAASC,eAAe,SAM1BX,M","file":"static/js/main.82b20647.chunk.js","sourcesContent":["import React,{Component} from \"react\"\nimport './colorbox.css'\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\n\nclass Colorbox extends Component{\n    constructor(props){\n        super(props);\n        this.state = {copied: false}\n        this.changestate= this.changestate.bind(this)\n    }\n    changestate(){\n        this.setState({copied:true}, ()=>{\n            setTimeout(()=>this.setState({copied:false}), 1500);\n        })\n    }\n    render(){\n        const {name,background} = this.props\n        const {copied} = this.state\n        return(\n            <CopyToClipboard text={background} onCopy={this.changestate}>\n            <div style={{background: background}} className= 'colorbox'>\n                <div style={{background}} className={`copy-overlay ${copied && \"show\"}`}/>\n                <div className={`copy-message ${copied && \"show\"}`}>\n                    <h1>Copiedüëç</h1>\n                    <p>Code: {background}</p>\n                </div>\n                <div className=\"copy-container\">\n                    <div className=\"box-content\">\n                        <span>\n                            {name}\n                        </span>\n                    </div>\n                        <button className=\"copy-button\">\n                            copy\n                        </button>\n                </div>\n            <span className=\"see-more\">more</span>\n            </div>\n            </CopyToClipboard>\n        )\n    }\n}\n\nexport default Colorbox","import React,{Component} from \"react\";\nimport 'rc-slider/assets/index.css';\nimport './navbar.css';\nimport Slider from 'rc-slider';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\nclass Navbar extends Component{\n    constructor(props){\n        super(props);\n        this.state={format:\"hex\", open:false}\n        this.handlechange= this.handlechange.bind(this)\n        this.closesnackbar=this.closesnackbar.bind(this)\n    }\n    handlechange(e){\n        this.setState({format:e.target.value, open:true})\n        this.props.handlechange(e.target.value)\n    }\n    closesnackbar(){\n        this.setState({open:false})\n    }\n  render(){\n        const {level,changelevel} = this.props\n        const {format} = this.state\n      return(\n          <header className=\"navbar\">\n              <div className=\"logo\">\n                <a href=\"#\">eric's color</a>\n              </div>\n\n              <div className=\"slider-container\">\n                <span>Level: {level}</span>\n                    <div className=\"slider\">\n                    <Slider defaultValue={level} step={100} min={100} max={900} onAfterChange={changelevel}/>\n                    </div>\n              </div>\n              <div className=\"select-container\">\n                  <Select value={format} onChange={this.handlechange}>\n                      <MenuItem value=\"hex\">Hex#ffffff</MenuItem>\n                      <MenuItem value=\"rgb\">rgb(255.255.255)</MenuItem>\n                      <MenuItem value=\"rgba\">rgba(255.255.255.0)</MenuItem>\n                  </Select>\n              </div>\n             <Snackbar anchorOrigin={{vertical:\"bottom\", horizontal:\"left\"}} open={this.state.open}\n             autoHideDuration={3000} message={<span id=\"message-id\">format changed to {format.toUpperCase()}</span>} \n             ContentProps={{\n                 \"aria-describedby\": \"message-id\"\n             }}\n             onClose={this.closesnackbar}\n             action={[<IconButton onClick={this.closesnackbar} color='inherit' key=\"close\"\n             aria-label=\"close\">\n                 <CloseIcon/>\n             </IconButton>]}/>\n          </header>\n      )\n  }\n}\n\nexport default Navbar","import React,{Component} from 'react'\nimport Colorbox from './colorbox'\nimport Navbar from './navbar'\nimport './palette.css';\n\n\n\nclass Palette extends Component{\n    constructor(props){\n        super(props);\n        this.state= {level:500, format:\"hex\"}\n        this.changelevel=this.changelevel.bind(this)\n        this.changeFormet=this.changeFormet.bind(this)\n    }\n    changelevel(newlevel){\n        this.setState({level:newlevel})\n    }\n    changeFormet(val){\n        this.setState({format:val})\n    }\n    render(){\n        const {colors,paletteName,emoji} =this.props.Palette\n        const {level,format} =this.state\n        const colorboxes = colors[level].map((color)=>(\n            <Colorbox background={color[format]} name ={color.name} key={color.id}/>\n        ))\n        return(\n            <div className=\"paletter\">\n             <Navbar handlechange={this.changeFormet}level={level} changelevel={this.changelevel}/>   \n                \n                {/* navbar */}\n                <div className=\"paletter-colors\">\n                {/* bunch of  color boxes */}\n                {colorboxes}\n                </div>\n                {/* footer */}\n                <footer className=\"paletter-footer\">\n                {paletteName}\n            <span className=\"emoji\">{emoji}</span>\n                </footer>\n            </div>\n        )\n        \n    }\n}\n\nexport default Palette","import React,{Component} from 'react'\nimport Palette from './palette'\nimport seed from './seed'\nimport './App.css';\nimport {generatePalette} from './colorhelper'\nimport {Route, Switch} from 'react-router-dom'\nfunction App() {\n  return (\n    <Switch>\n    <Route exact path=\"/\" render={()=><h1>Pallet list gonna be here</h1>}/>\n    <Route exact path=\"/palette/:id\" render={()=><h1>individual</h1>}/>\n    </Switch>\n    \n    // <div className=\"App\">\n    //   <Palette Palette={generatePalette(seed[4])}/>\n    // </div>\n  );\n}\n\nexport default App;\n\n// import React,{Component} from \"react\"\n\n// class Colorbox extends Component{\n//   render(){\n//       return(\n//           <div>\n\n//           </div>\n//       )\n//   }\n// }\n\n// export default Colorbox ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\"\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}